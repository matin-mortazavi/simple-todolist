/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as ProtectedTodosRouteImport } from './routes/_protected/todos/route'
import { Route as ProtectedTodosAddImport } from './routes/_protected/todos/add'
import { Route as ProtectedTodosIdViewImport } from './routes/_protected/todos/$id.view'
import { Route as ProtectedTodosIdEditImport } from './routes/_protected/todos/$id.edit'

// Create/Update Routes

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedTodosRouteRoute = ProtectedTodosRouteImport.update({
  path: '/todos',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedTodosAddRoute = ProtectedTodosAddImport.update({
  path: '/add',
  getParentRoute: () => ProtectedTodosRouteRoute,
} as any)

const ProtectedTodosIdViewRoute = ProtectedTodosIdViewImport.update({
  path: '/$id/view',
  getParentRoute: () => ProtectedTodosRouteRoute,
} as any)

const ProtectedTodosIdEditRoute = ProtectedTodosIdEditImport.update({
  path: '/$id/edit',
  getParentRoute: () => ProtectedTodosRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/todos': {
      id: '/_protected/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof ProtectedTodosRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_protected/todos/add': {
      id: '/_protected/todos/add'
      path: '/add'
      fullPath: '/todos/add'
      preLoaderRoute: typeof ProtectedTodosAddImport
      parentRoute: typeof ProtectedTodosRouteImport
    }
    '/_protected/todos/$id/edit': {
      id: '/_protected/todos/$id/edit'
      path: '/$id/edit'
      fullPath: '/todos/$id/edit'
      preLoaderRoute: typeof ProtectedTodosIdEditImport
      parentRoute: typeof ProtectedTodosRouteImport
    }
    '/_protected/todos/$id/view': {
      id: '/_protected/todos/$id/view'
      path: '/$id/view'
      fullPath: '/todos/$id/view'
      preLoaderRoute: typeof ProtectedTodosIdViewImport
      parentRoute: typeof ProtectedTodosRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  ProtectedRouteRoute: ProtectedRouteRoute.addChildren({
    ProtectedTodosRouteRoute: ProtectedTodosRouteRoute.addChildren({
      ProtectedTodosAddRoute,
      ProtectedTodosIdEditRoute,
      ProtectedTodosIdViewRoute,
    }),
  }),
  authLoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/login"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/todos"
      ]
    },
    "/_protected/todos": {
      "filePath": "_protected/todos/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/todos/add",
        "/_protected/todos/$id/edit",
        "/_protected/todos/$id/view"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_protected/todos/add": {
      "filePath": "_protected/todos/add.tsx",
      "parent": "/_protected/todos"
    },
    "/_protected/todos/$id/edit": {
      "filePath": "_protected/todos/$id.edit.tsx",
      "parent": "/_protected/todos"
    },
    "/_protected/todos/$id/view": {
      "filePath": "_protected/todos/$id.view.tsx",
      "parent": "/_protected/todos"
    }
  }
}
ROUTE_MANIFEST_END */
